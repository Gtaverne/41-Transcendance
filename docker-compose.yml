version: '3.8'
services:

  db:
    container_name: db
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=transcendance_db
      - PGDATA=/var/lib/postgresql/data
    hostname: database
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - trans_network

  backend:
    container_name: backend
    depends_on:
      - db
    build:
      context: ./backend/. 
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=transcendance_db
      - BACKEND_PORT=3000
      - INTRA_API=https://api.intra.42.fr/oauth/token
      - Auth_URL=https://api.intra.42.fr/oauth/authorize
      - Access_Token_URL=https://api.intra.42.fr/oauth/token
      - Client_ID=f950eb9f6505f95fd8146faeb36d1706ceda488419c445ab4fa7485903463bd6
      - Client_Secret=1b5f67e46005d92cc5bac66cbaa79a6c133e37fea09ce10df2950ff85625e2cf
      - JWT_Secret=${JWT_Secret}
    networks:
      - trans_network
    restart: always

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080


volumes:
  db_data:

networks:
  trans_network:
